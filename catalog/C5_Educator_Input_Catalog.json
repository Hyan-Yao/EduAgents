{
    "student_profile": {
        "student_background": "Total students: ~135. Student level: Primarily graduate students. International/domestic ratio: ~60% international, ~40% domestic. Academic background: Mostly Computer Science, with some students from other engineering fields (e.g., Electrical, Industrial).",
        "aggregate_academic_performance": "Overall academic strength: Generally strong. Graduate-level readiness: Anticipated to be high based on student background and prerequisites. Experience variability: Varies in prior exposure to database systems, distributed computing, and cloud platforms.",
        "anticipated_learner_needs_and_barriers": "Programming confidence: Most are comfortable with Python, C++, and Java. Concept gaps: Some unfamiliarity with distributed systems, cloud data platforms, and parallel computing frameworks. Tool gaps: Uneven experience with Hadoop, Spark, PostgreSQL, MongoDB, Kubernetes, and AWS. Language needs: Some may benefit from clarified explanations of distributed algorithms and cloud architectures. Math background: Minor gaps in discrete mathematics and systems optimization."
    },
    "instructor_preferences": {
        "instructor_emphasis_intent": "Teaching focus: Emphasizes scalable data processing systems, distributed query execution, and cloud-based data platforms. Content style preference: Focuses on hands-on, system-oriented design and deployment of data platforms. Instructional intent: Engages students through solving large-scale, distributed data processing problems.",
        "instructor_style_preferences": "Language background: Non-native English speaker with strong academic communication. Tone: Graduate-level formal; avoids overly casual expression. Script style: Direct and structured with clear transitions. Slide visuals: Prefers clarity—balanced density with bullet points and minimal clutter.",
        "instructor_focus_for_assessment": "Assessment type: Balanced emphasis on individual assignments, midterm exams, and team projects. Task format: Includes quizzes, coding assignments, midterm exam, and both individual and group projects. Real-world application: Strong emphasis on cloud and distributed system deployment in projects. Final exam: No final exam; assessment includes a midterm exam and major projects."
    },
    "course_structure": {
        "course_learning_outcomes": "Students will be able to: Differentiate among data models such as relational, NoSQL, and graph databases. Perform scalable query processing and analytics in distributed systems like Hadoop and Spark. Design and deploy distributed and cloud database systems. Manage data pipelines and infrastructure supporting cloud computing and large language models (LLMs). Use tools such as AWS, Kubernetes, PostgreSQL, and NoSQL databases for distributed data processing.",
        "total_number_of_weeks": "Total number of weeks: 16",
        "weekly_schedule_outline": "Weeks 1–4: Fundamentals of data models, query processing, and distributed databases. Weeks 5–8: Distributed data management with MapReduce, Spark, and NoSQL systems. Weeks 9–12: Advanced platforms (graph processing, streaming, LLMs, cloud systems). Weeks 13–15: Team project development and presentations. Week 16: Final project submission and review."
    },
    "assessment_design": {
        "assessment_format_preferences": "Assessment type preference: Mix of quizzes, individual assignments, midterm exam, and team project. Milestone structure: Projects include clear milestones with GitHub-based submissions. Final project expectation: Significant individual and team projects with practical system implementation. Question type preference: Both auto-graded and open-ended tasks. Application emphasis: Strong focus on real-world distributed data systems and cloud platforms.",
        "assessment_delivery_constraints": "Final exam policy: No final exam; course includes a midterm and projects. Assessment pacing: Assessments distributed across semester; includes regular quizzes, assignments, and projects. LMS compatibility: All assignments are submitted via ASU’s Canvas LMS and GitHub. Submission format: PDF documents, code repositories on GitHub, and Canvas uploads."
    },
    "teaching_constraints": {
        "platform_policy_constraints": "LMS platform: Canvas (ASU standard). Submission formats: PDF, code on GitHub, and project deliverables. Policy compliance: Must comply with ASU accessibility, academic integrity, and copyright policies.",
        "ta_support_availability": "TA count: Multiple TAs and graders supporting grading, GitHub, and project work. TA responsibilities: Assist with grading, GitHub coordination, and office hours. TA technical role: Provide support for distributed systems and cloud computing tools. TA availability: Regular weekly office hours and Zoom support.",
        "instructional_delivery_context": "Session duration: 75 minutes. Delivery format: Hybrid (in-person lecture + online Q&A), with recorded lectures. Use of classroom tools: Heavy use of GitHub, cloud platforms, and distributed systems. Instructional pacing: Fast-paced with system-building focus and regular deliverables.",
        "max_slide_count": "50"
    },
    "institutional_requirements": {
        "program_learning_outcomes": "Reinforces student competencies in scalable data systems, distributed database design, cloud-based data infrastructure, and real-world data engineering applications.",
        "academic_policies_and_institutional_standards": "Academic integrity: Must follow ASU’s Academic Integrity Policy and FSE Honor Code. Accessibility: Complies with ASU disability accommodation policy. Copyright: Unauthorized sharing or recording of course content is prohibited. Canvas requirement: All instructional materials and submissions are managed through Canvas.",
        "department_syllabus_requirements": "Clearly stated course learning outcomes. Grading policy breakdown. Participation and assessment components. Weekly schedule outline. Required university policies (academic integrity, Title IX, accessibility, etc.)."
    },
    "prior_feedback": {
        "historical_course_evaluation_results": "Overall course rating: Generally positive; students appreciate the real-world orientation and relevance of the material. Preferred assessment structure: Students express strong support for project-based learning and dislike high-stakes final exams. Clarity concerns: Occasional feedback indicates that lecture pacing can feel fast in early weeks for students unfamiliar with certain tools."
    }
}