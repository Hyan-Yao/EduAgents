{
    "student_profile": {
        "student_background": "Total students: ~40. Student level: Primarily graduate students. International/domestic ratio: ~80% international, ~20% domestic. Academic background: Mostly Computer Science, Data Science, or Business Analytics graduate students.",
        "aggregate_academic_performance": "Overall academic strength: Generally strong. Graduate-level readiness: Anticipated to be high based on student background and prerequisites. Experience variability: Varies in prior exposure to distributed systems, cloud computing, and large-scale data processing.",
        "anticipated_learner_needs_and_barriers": "Programming confidence: Most are comfortable with Python and basic Java. Concept gaps: Some unfamiliarity with distributed processing frameworks like MapReduce and Spark. Tool gaps: Uneven experience with Hadoop, Spark, and streaming platforms. Language needs: Some students may benefit from clarified explanations of distributed algorithms and streaming data models. Math background: Minor gaps in discrete mathematics and systems optimization."
    },
    "instructor_preferences": {
        "instructor_emphasis_intent": "Teaching focus: Emphasizes scalable data processing with big data frameworks such as Hadoop, Spark, and streaming systems. Content style preference: Focuses on hands-on, system-oriented learning and project-based exploration of big data tools. Instructional intent: Engages students through practical implementation of large-scale data processing pipelines.",
        "instructor_style_preferences": "Language background: Non-native English speaker with strong academic communication. Tone: Graduate-level formal; avoids overly casual expression. Script style: Direct and structured with clear transitions. Slide visuals: Prefers clarity—balanced density with bullet points and minimal clutter.",
        "instructor_focus_for_assessment": "Assessment type: Balanced focus on individual assignments and a major course project. Task format: Includes auto-graded quizzes, coding assignments, and a final project. Real-world application: Strong emphasis on practical use of Hadoop, Spark, and streaming data platforms. Final exam: No final exam; course assessment is based on quizzes, assignments, and a final project."
    },
    "course_structure": {
        "course_learning_outcomes": "Students will be able to: Understand the architecture and principles of big data systems, including Hadoop and Spark. Develop and deploy distributed applications using MapReduce and Spark. Process and analyze streaming data with modern big data tools. Apply large-scale machine learning techniques in distributed environments. Evaluate scalability and performance of big data solutions.",
        "total_number_of_weeks": "Total number of weeks: 15",
        "weekly_schedule_outline": "Weeks 1–3: Introduction to Big Data, Hadoop Ecosystem, and MapReduce. Weeks 4–6: Distributed Data Processing with Spark. Weeks 7–8: Streaming Data Systems and Real-time Analytics. Weeks 9–12: Large-scale Machine Learning with Big Data Platforms. Weeks 13–15: Final Project Development and Presentations."
    },
    "assessment_design": {
        "assessment_format_preferences": "Assessment type preference: Quizzes, coding assignments, and a major project. Milestone structure: Final project includes proposal, progress report, and final submission. Final project expectation: A major project demonstrating integration of Hadoop, Spark, and streaming tools. Question type preference: Mix of auto-graded quizzes and coding-based assignments. Application emphasis: Practical focus on building scalable data processing solutions.",
        "assessment_delivery_constraints": "Final exam policy: No final exam; grading based on quizzes, assignments, and project. Assessment pacing: Steady pace with periodic quizzes and assignments leading to final project. LMS compatibility: All submissions via Stevens’ Canvas LMS. Submission format: Code submissions (via GitHub/Canvas) and project reports in PDF."
    },
    "teaching_constraints": {
        "platform_policy_constraints": "LMS platform: Canvas. Submission formats: PDF, code repositories (e.g., GitHub). Policy compliance: Must comply with Stevens’ academic integrity and accessibility policies.",
        "ta_support_availability": "TA count: 1 or more, depending on enrollment. TA responsibilities: Assist with grading and technical support for Hadoop, Spark, and streaming tools. TA technical role: Provide coding support and technical troubleshooting for big data frameworks. TA availability: Regular office hours and online support.",
        "instructional_delivery_context": "Session duration: 75 minutes. Delivery format: In-person or hybrid, with hands-on labs and coding sessions. Use of classroom tools: Hadoop, Spark, streaming platforms, and distributed storage systems. Instructional pacing: Moderate-to-fast pace with strong emphasis on practical coding work.",
        "max_slide_count": "50"
    },
    "institutional_requirements": {
        "program_learning_outcomes": "Reinforces student competencies in scalable data processing, distributed systems, streaming analytics, and machine learning with big data.",
        "academic_policies_and_institutional_standards": "Academic integrity: Must follow Stevens’ Academic Integrity Policy. Accessibility: Complies with Stevens disability accommodation policy. Copyright: Unauthorized sharing or recording of course content is prohibited. Canvas requirement: All instructional materials and submissions are managed through Canvas.",
        "department_syllabus_requirements": "Clearly stated course learning outcomes. Grading policy breakdown. Participation and assessment components. Weekly schedule outline. Required university policies (academic integrity, Title IX, accessibility, etc.)."
    },
    "prior_feedback": {
        "historical_course_evaluation_results": "Overall course rating: Generally positive; students appreciate the real-world orientation and relevance of the material. Preferred assessment structure: Students express strong support for project-based learning and dislike high-stakes final exams. Clarity concerns: Occasional feedback indicates that lecture pacing can feel fast in early weeks for students unfamiliar with certain tools."
    }
}